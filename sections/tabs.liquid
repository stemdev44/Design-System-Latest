{{ 'section-multicolumn.css' | asset_url | stylesheet_tag }}
{{ 'component-slider.css' | asset_url | stylesheet_tag }}
{{ 'video-section.css' | asset_url | stylesheet_tag }}
{{ 'component-deferred-media.css' | asset_url | stylesheet_tag }}

{%- style -%}
.section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
}

.tab-buttons {
    display: flex;
    gap: 2rem;
    padding: 1rem 0 0;
    margin: 0;
    list-style: none;
    border-bottom: 1px solid;
    }

.tab-button {
    background: none;
    border: none;
    text-transform: uppercase;
    /* padding: 0.5rem 0; */
    cursor: pointer;
    position: relative;
    padding: 5px 15px;
}

.tab-button.active {
    border-bottom: 2px solid;
    font-weight: bold;
}

.tab-button.active h3{
    font-weight: bold;
}

.tab-content {
    padding: 1rem 0;
    max-width:100%;
}

.tab-content.hidden {
    display: none;
}

.tab-inner-content {
    padding: 0 1rem;
}

@media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top }}px;
    padding-bottom: {{ section.settings.padding_bottom }}px;
    }
}

    @media screen and (max-width: 749px) {
        .section-{{ section.id }}-padding .multicolumn__title .title{
            text-align: {{ section.settings.mobile_description_alignment }} !important;
        } 
        .tab-buttons {
            flex-wrap:wrap;
        }
        .tabs-wrapper{
            padding: 0 2rem;
        }
    }  
{%- endstyle -%}

{%- liquid
assign columns_mobile_int = section.settings.columns_mobile | plus: 0
assign show_mobile_slider = false
if section.settings.swipe_on_mobile and section.blocks.size > columns_mobile_int
    assign show_mobile_slider = true
endif
-%}

<div class="multicolumn color-{{ section.settings.color_scheme }} gradient{% unless section.settings.background_style == 'none' and settings.text_boxes_border_thickness > 0 or settings.text_boxes_shadow_opacity > 0 %} background-{{ section.settings.background_style }}{% endunless %}{% if section.settings.title == blank %} no-heading{% endif %}">
<div
    class="{%if section.settings.layout=='grid' %}page-width{% endif %} section-{{ section.id }}-padding isolate{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
    {% if settings.animations_reveal_on_scroll %}
    data-cascade
    {% endif %}
>
    {%- unless section.settings.title == blank -%}
    <div class="title-wrapper-with-link title-wrapper--self-padded-mobile title-wrapper--no-top-margin multicolumn__title">
        <h2 class="title inline-richtext {{ section.settings.heading_size }}" style="width:100%; text-align:{{section.settings.heading_alignment}};">
            {{ section.settings.title }}
        </h2>
    </div>     
    {%- endunless -%}

    <div class="tabs-wrapper">
        <!-- Tab Buttons -->
        <ul class="tab-buttons">
        {%- for block in section.blocks -%}
            <li>
            <button
                type="button"
                class="tab-button {% if forloop.first %}active{% endif %}"
                data-tab-target="Slide-{{ section.id }}-{{ forloop.index }}"
            >
                {% comment %} {{ block.settings.heading | default: block.settings.page.title  }} {% endcomment %}
                {% comment %} ///////////////////     {% endcomment %}
                <h3 class="small-hide medium-hide inline-richtext  {% if block.settings.heading_size == 'body_font_extra_Large' %} {{ block.settings.heading_size }} {% else %} subtitle--{{ block.settings.heading_size }} {% endif %} ">
                    {{ block.settings.heading | default: block.settings.page.title  }}
                </h3>                        
                <h3 class="large-up-hide inline-richtext {% if block.settings.heading_size_mobile == 'body_font_extra_Large' %} {{ block.settings.heading_size_mobile }} {% else %} subtitle--{{ block.settings.heading_size_mobile }} {% endif %}">
                    {{ block.settings.heading | default: block.settings.page.title  }}
                </h3>                     
                {% comment %} ////////////////////// {% endcomment %}
            </button>
            </li>
        {%- endfor -%}
        </ul>    

        <slider-component class="slider-mobile-gutter">
        <ul
            class="multicolumn-list contains-content-container grid grid--2-col-tablet-down grid--2-col-desktop {% if show_mobile_slider %} slider slider--tablet grid--peek{% endif %}"
            id="Slider-{{ section.id }}"
            role="list"
        >
            {%- for block in section.blocks -%}
                <li
                id="Slide-{{ section.id }}-{{ forloop.index }}"
                class="tab-content multicolumn--{{block.id}} multicolumn-list__item grid__item{% if section.settings.swipe_on_mobile %} slider__slide{% endif %}{% if section.settings.column_alignment == 'center' %} center{% endif %}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}{% unless forloop.first %} hidden{% endunless %}"
                {{ block.shopify_attributes }}
                {% if settings.animations_reveal_on_scroll %}
                    data-cascade
                    style="--animation-order: {{ forloop.index }};"
                {% endif %}
                >
                    {% comment %} {%- if block.settings.page != blank -%}
                        {%- assign page = pages[block.settings.page] -%}
                    {%- endif -%} {% endcomment %}
                    <div class="rte{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}">
                        {%- if block.settings.description != blank -%}                            
                            {{ block.settings.description }}
                        {%- else -%}
                            {{ block.settings.page.content }}
                        {%- endif -%}
                    </div>                
                </li>
            {%- endfor -%}
        </ul>

        </slider-component>
    </div>    
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
    const tabButtons = document.querySelectorAll('.tab-button');
    const tabContents = document.querySelectorAll('.tab-content');

    tabButtons.forEach(button => {
        button.addEventListener('click', () => {
        const targetId = button.dataset.tabTarget;

        tabButtons.forEach(btn => btn.classList.remove('active'));
        button.classList.add('active');

        tabContents.forEach(content => {
            if (content.id === targetId) {
            content.classList.remove('hidden');
            } else {
            content.classList.add('hidden');
            }
        });
        });
    });
    });
</script>
{% schema %}
{
"name": "Tab",
"class": "section",
"tag": "section",
"disabled_on": {
    "groups": ["header", "footer"]
},
"settings": [          
    {
    "type": "inline_richtext",
    "id": "title",
    "default": "Tabs Section",
    "label": "t:sections.multicolumn.settings.title.label"
    },
    {
    "type": "select",
    "id": "heading_size",
    "options": [
        {
        "value": "h2",
        "label": "t:sections.all.heading_size.options__1.label"
        },
        {
        "value": "h1",
        "label": "t:sections.all.heading_size.options__2.label"
        },
        {
        "value": "h0",
        "label": "t:sections.all.heading_size.options__3.label"
        },
        {
        "value": "hxl",
        "label": "t:sections.all.heading_size.options__4.label"
        },
        {
        "value": "hxxl",
        "label": "t:sections.all.heading_size.options__5.label"
        }
    ],
    "default": "h1",
    "label": "t:sections.all.heading_size.label"
    },   
    {
    "type": "select",
    "id": "heading_alignment",
    "label": "Desktop Alignment",
    "options": [
        {
        "value": "left",
        "label": "t:sections.collapsible_content.settings.heading_alignment.options__1.label"
        },
        {
        "value": "center",
        "label": "t:sections.collapsible_content.settings.heading_alignment.options__2.label"
        },
        {
        "value": "right",
        "label": "t:sections.collapsible_content.settings.heading_alignment.options__3.label"
        }
    ],
    "default": "center"
    },
    {
    "type": "select",
    "id": "mobile_description_alignment",
    "label": "Mobile Alignment",
    "options": [
        {
        "value": "left",
        "label": "t:sections.collapsible_content.settings.heading_alignment.options__1.label"
        },
        {
        "value": "center",
        "label": "t:sections.collapsible_content.settings.heading_alignment.options__2.label"
        },
        {
        "value": "right",
        "label": "t:sections.collapsible_content.settings.heading_alignment.options__3.label"
        }
    ],
    "default": "center"
    },
    {
    "type": "select",
    "id": "layout",
    "options": [
        {
        "value": "full_bleed",
        "label": "t:sections.slideshow.settings.layout.options__1.label"
        },
        {
        "value": "grid",
        "label": "t:sections.slideshow.settings.layout.options__2.label"
        }
    ],
    "default": "grid",
    "label": "Layout"
    },
    {
    "type": "color_scheme",
    "id": "color_scheme",
    "label": "t:sections.all.colors.label",
    "default": "scheme-1"
    },            
    {
    "type": "header",
    "content": "t:sections.all.padding.section_padding_heading"
    },
    {
    "type": "range",
    "id": "padding_top",
    "min": 0,
    "max": 100,
    "step": 4,
    "unit": "px",
    "label": "t:sections.all.padding.padding_top",
    "default": 36
    },
    {
    "type": "range",
    "id": "padding_bottom",
    "min": 0,
    "max": 100,
    "step": 4,
    "unit": "px",
    "label": "t:sections.all.padding.padding_bottom",
    "default": 36
    }    
],
"blocks": [
    {
        "type": "column",
        "name": "Tab",
        "settings": [
            {
            "type": "inline_richtext",
            "id": "heading",
            "default": "Tab",
            "label": "t:sections.collapsible_content.blocks.collapsible_row.settings.heading.label"
            },
            {
                "type": "select",
                "id": "heading_size",
                "options": [
                    {
                    "value": "small",
                    "label": "t:sections.all.heading_size.options__1.label"
                    },
                    {
                    "value": "medium",
                    "label": "t:sections.all.heading_size.options__2.label"
                    },
                    {
                    "value": "large",
                    "label": "t:sections.all.heading_size.options__3.label"
                    },
                    {
                    "value": "body_font_extra_Large",
                    "label": "t:sections.all.heading_size.options__4.label"
                    },
                ],
                "default": "large",
                "label": "Heading Desktop Size"
            },
            {
                "type": "select",
                "id": "heading_size_mobile",
                "options": [
                    {
                    "value": "small",
                    "label": "t:sections.all.heading_size.options__1.label"
                    },
                    {
                    "value": "medium",
                    "label": "t:sections.all.heading_size.options__2.label"
                    },
                    {
                    "value": "large",
                    "label": "t:sections.all.heading_size.options__3.label"
                    },
                    {
                    "value": "body_font_extra_Large",
                    "label": "t:sections.all.heading_size.options__4.label"
                    },
                ],
                "default": "large",
                "label": "Heading Mobile Size"
            },                           
            {
                "type": "page",
                "id": "page",
                "label": "t:sections.page.settings.page.label"
            },
            {
                "type": "richtext",
                "id": "description",
                "label": "t:sections.featured-collection.settings.description.label"
            }             
        ]
    }
],
"presets": [
    {
    "name": "Tabs",
    "blocks": [
        {
        "type": "column"
        },
        {
        "type": "column"
        },
        {
        "type": "column"
        }
    ]
    }
]
}
{% endschema %}
