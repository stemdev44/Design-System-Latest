{{ 'section-multicolumn.css' | asset_url | stylesheet_tag }}
{{ 'component-slider.css' | asset_url | stylesheet_tag }}
{{ 'video-section.css' | asset_url | stylesheet_tag }}
{{ 'component-deferred-media.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }

    @media screen and (max-width: 749px) {
    .section-{{ section.id }}-padding .multicolumn__title .title{
        text-align: {{ section.settings.mobile_description_alignment }} !important;
        }             
    }  

    .tab-buttons {
        display: flex;
        gap: 1rem;
        margin-bottom: 1rem;
        list-style: none;
        padding: 0;
    }
    .tab-button {
        padding: 0.5rem 1rem;
        background-color: #eee;
        border: none;
        cursor: pointer;
        font-weight: bold;
    }
    .tab-button.active {
        background-color: #333;
        color: white;
    }
    .tab-content.hidden {
        display: none;
    }    
{%- endstyle -%}

{%- liquid
  assign columns_mobile_int = section.settings.columns_mobile | plus: 0
  assign show_mobile_slider = false
  if section.settings.swipe_on_mobile and section.blocks.size > columns_mobile_int
    assign show_mobile_slider = true
  endif
-%}

<div class="multicolumn color-{{ section.settings.color_scheme }} gradient{% unless section.settings.background_style == 'none' and settings.text_boxes_border_thickness > 0 or settings.text_boxes_shadow_opacity > 0 %} background-{{ section.settings.background_style }}{% endunless %}{% if section.settings.title == blank %} no-heading{% endif %}">
  <div
    class="{%if section.settings.layout=='grid' %}page-width{% endif %} section-{{ section.id }}-padding isolate{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
    {% if settings.animations_reveal_on_scroll %}
      data-cascade
    {% endif %}
  >
    {%- unless section.settings.title == blank -%}
      <div class="title-wrapper-with-link title-wrapper--self-padded-mobile title-wrapper--no-top-margin multicolumn__title">
        <h2 class="title inline-richtext {{ section.settings.heading_size }}" style="width:100%; text-align:{{section.settings.heading_alignment}};">
            {{ section.settings.title }}
        </h2>
      </div>     
    {%- endunless -%}

    <div class="tabs-wrapper">
        <!-- Tab Buttons -->
        <ul class="tab-buttons">
          {%- for block in section.blocks -%}
            <li>
              <button
                type="button"
                class="tab-button {% if forloop.first %}active{% endif %}"
                data-tab-target="Slide-{{ section.id }}-{{ forloop.index }}"
              >
                {{ block.settings.page.title | default: 'Tab ' | append: forloop.index }}
              </button>
            </li>
          {%- endfor -%}
        </ul>    

    <slider-component class="slider-mobile-gutter">
      <ul
        class="multicolumn-list contains-content-container grid grid--{{ section.settings.columns_mobile }}-col-tablet-down grid--{{ section.settings.columns_desktop }}-col-desktop{% if show_mobile_slider %} slider slider--tablet grid--peek{% endif %}"
        id="Slider-{{ section.id }}"
        role="list"
      >
        {%- for block in section.blocks -%}
            <li
              id="Slide-{{ section.id }}-{{ forloop.index }}"
              class="tab-content multicolumn--{{block.id}} multicolumn-list__item grid__item{% if section.settings.swipe_on_mobile %} slider__slide{% endif %}{% if section.settings.column_alignment == 'center' %} center{% endif %}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}{% unless forloop.first %} hidden{% endunless %}"
              {{ block.shopify_attributes }}
              {% if settings.animations_reveal_on_scroll %}
                data-cascade
                style="--animation-order: {{ forloop.index }};"
              {% endif %}
            >
              {%- if block.settings.page != blank -%}
                {%- assign page = pages[block.settings.page] -%}
                <h2 class="{{ block.settings.heading_size }}">{{ page.title }}</h2>
                <div>{{ block.settings.description }}</div>
                <div>{{ page.content }}</div>
              {%- endif -%}
            </li>
          {%- endfor -%}
      </ul>

    </slider-component>
    {% comment %} <div class="tabs-nav" role="tablist">
        {% for block in section.blocks %}
          <button
            class="tab-button{% if forloop.first %} active{% endif %}"
            data-tab="tab-{{ block.id }}"
            role="tab"
            aria-controls="tab-{{ block.id }}"
            aria-selected="{{ forloop.first }}">
            {{ block.settings.page.title | default: 'Tab ' | append: forloop.index }}
          </button>
        {% endfor %}
      </div>    
  </div>
  <div class="tabs-content">
    {% for block in section.blocks %}
      <div
        id="tab-{{ block.id }}"
        class="tab-panel{% if forloop.first %} active{% endif %}"
        role="tabpanel"
        aria-labelledby="tab-{{ block.id }}">
        
        <{{ block.settings.heading_size }}>
          {{ block.settings.page.title }}
        </{{ block.settings.heading_size }}>
  
        <div class="rte">
          {{ block.settings.description }}
          {{ block.settings.page.content }}
        </div>
  
      </div>
    {% endfor %}
  </div>   {% endcomment %}
</div>

{% comment %} <script>
    document.addEventListener("DOMContentLoaded", function () {
      const buttons = document.querySelectorAll(".tab-button");
      const panels = document.querySelectorAll(".tab-panel");
  
      buttons.forEach(button => {
        button.addEventListener("click", function () {
          // Remove active classes
          buttons.forEach(btn => btn.classList.remove("active"));
          panels.forEach(panel => panel.classList.remove("active"));
  
          // Activate the clicked tab
          const target = this.dataset.tab;
          document.getElementById(target).classList.add("active");
          this.classList.add("active");
        });
      });
    });
</script> {% endcomment %}
<script>
    document.addEventListener('DOMContentLoaded', function () {
      const tabButtons = document.querySelectorAll('.tab-button');
      const tabContents = document.querySelectorAll('.tab-content');
  
      tabButtons.forEach(button => {
        button.addEventListener('click', () => {
          const targetId = button.dataset.tabTarget;
  
          tabButtons.forEach(btn => btn.classList.remove('active'));
          button.classList.add('active');
  
          tabContents.forEach(content => {
            if (content.id === targetId) {
              content.classList.remove('hidden');
            } else {
              content.classList.add('hidden');
            }
          });
        });
      });
    });
</script>
{% schema %}
{
  "name": "Tab",
  "class": "section",
  "tag": "section",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [          
    {
      "type": "inline_richtext",
      "id": "title",
      "default": "Tab Section",
      "label": "t:sections.multicolumn.settings.title.label"
    },
    {
      "type": "select",
      "id": "heading_size",
      "options": [
        {
          "value": "h2",
          "label": "t:sections.all.heading_size.options__1.label"
        },
        {
          "value": "h1",
          "label": "t:sections.all.heading_size.options__2.label"
        },
        {
          "value": "h0",
          "label": "t:sections.all.heading_size.options__3.label"
        },
        {
          "value": "hxl",
          "label": "t:sections.all.heading_size.options__4.label"
        },
        {
          "value": "hxxl",
          "label": "t:sections.all.heading_size.options__5.label"
        }
      ],
      "default": "h1",
      "label": "t:sections.all.heading_size.label"
    },   
    {
      "type": "select",
      "id": "heading_alignment",
      "label": "Desktop Alignment",
      "options": [
        {
          "value": "left",
          "label": "t:sections.collapsible_content.settings.heading_alignment.options__1.label"
        },
        {
          "value": "center",
          "label": "t:sections.collapsible_content.settings.heading_alignment.options__2.label"
        },
        {
          "value": "right",
          "label": "t:sections.collapsible_content.settings.heading_alignment.options__3.label"
        }
      ],
      "default": "center"
    },
    {
      "type": "select",
      "id": "mobile_description_alignment",
      "label": "Mobile Alignment",
      "options": [
        {
          "value": "left",
          "label": "t:sections.collapsible_content.settings.heading_alignment.options__1.label"
        },
        {
          "value": "center",
          "label": "t:sections.collapsible_content.settings.heading_alignment.options__2.label"
        },
        {
          "value": "right",
          "label": "t:sections.collapsible_content.settings.heading_alignment.options__3.label"
        }
      ],
      "default": "center"
    },
    {
      "type": "select",
      "id": "layout",
      "options": [
        {
          "value": "full_bleed",
          "label": "t:sections.slideshow.settings.layout.options__1.label"
        },
        {
          "value": "grid",
          "label": "t:sections.slideshow.settings.layout.options__2.label"
        }
      ],
      "default": "grid",
      "label": "Layout"
    },        
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }    
  ],
  "blocks": [
    {
      "type": "column",
      "name": "Tab",
      "settings": [
        {
            "type": "page",
            "id": "page",
            "label": "t:sections.page.settings.page.label"
        },
        {
            "type": "richtext",
            "id": "description",
            "label": "t:sections.featured-collection.settings.description.label"
        },        
        {
            "type": "select",
            "id": "heading_size",
            "options": [
              {
                "value": "h2",
                "label": "t:sections.all.heading_size.options__1.label"
              },
              {
                "value": "h1",
                "label": "t:sections.all.heading_size.options__2.label"
              },
              {
                "value": "h0",
                "label": "t:sections.all.heading_size.options__3.label"
              },
              {
                "value": "hxl",
                "label": "t:sections.all.heading_size.options__4.label"
              },
              {
                "value": "hxxl",
                "label": "t:sections.all.heading_size.options__5.label"
              }
            ],
            "default": "h1",
            "label": "t:sections.all.heading_size.label"
        },              
      ]
    }
  ],
  "presets": [
    {
      "name": "Tab",
      "blocks": [
        {
          "type": "column"
        },
        {
          "type": "column"
        },
        {
          "type": "column"
        }
      ]
    }
  ]
}
{% endschema %}
